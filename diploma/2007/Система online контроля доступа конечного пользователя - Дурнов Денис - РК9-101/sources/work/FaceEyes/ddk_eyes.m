function [O2, O3] = ddk_eyes(ImFace, ImMid, x0, y0)
%function [x1, y1, x2, y2] = ddk_eyes(im1, x0, y0)
%function ddk_eyes(im, id1, id2, id2n)
% Функция поиска глаз (их центров) на изображении градиентным методом.
% ImFace - изображение лица (для визуализации результатов работы ф-ии) 
% ImMid - рабочее изображение (средняя часть лица)
% x0 и y0 - координаты выделки ImMid относительно начального изображения
% O2(x2, y2) - координаты правого глаза относительно изображения лица
% O3(x3, y3) - координаты левого глаза относительно изображения лица
%                   Дурнов Д.К. [25.05.2007]
O1 = [x0, y0];

IdRight = imread('ERnn.tif'); % эталон правого глаза
IdLeft  = imread('ELnn.tif'); % эталон левого глаза

[N, M]  = size(IdRight); % Первоначальные размеры эталона глаза.

%-------------------------------------------------------------------------%
% Процедура выделения средней части лица.
%O1 = 0; O2 = 0; O3 = 0;
%[im1, O1, k1] = ddk_sel_frame(im, id1, 0);
frame = imread('_frame.tif');
figure;
subplot(2, 2, 1); imshow(ImFace); title('Изображение');
subplot(2, 2, 2); imshow(frame); title('Первый шаг');
clear frame;
%-------------------------------------------------------------------------%

% Увеличение размера выделенной средней части лица и эталона глаза.
%immid   = adapthisteq(ImMid);
%immid   = imresize(immid, 1.6, 'bicubic'); % средняя часть лица
immid   = imresize(ImMid, 1.6, 'bicubic'); % средняя часть лица
idright = imresize(IdRight, 1.62, 'bicubic'); % эталон правого глаза
idleft  = imresize(IdLeft, 1.62, 'bicubic'); % эталон левого глаза

% Процедура выделения первого (правого) глаза.
'right'
[im2, O2, k2] = ddk_sel_frame(immid, idright, 1);
frame = imread('_frame.tif');
subplot(2, 2, 3); imshow(frame); title('Второй шаг');
clear frame;

%-------------------------------------------------------------------------%
% Вырезаем выделенный глаз из изображения средней части лица для более
% корректного последующего выделения левого глаза.
%[nn, mm] = size(immid); % размер отмасштабированной средней части лица
%[n, m]   = size(im2); % размер выделенного правого глаза

%%[x, y] = O2;
%ImCut = zeros(nn, mm);
%ImCut(O2(2) : (O2(2) + n - 1), O2(1) : (O2(1) + m - 1)) = ones(n, m);

%ImCut = gscale(ImCut);
%immid = imadd(immid, ImCut);
%clear ImCut;
%-------------------------------------------------------------------------%

% Процедура выделения второго (левого) глаза
'left'
[im2, O3, k3] = ddk_sel_frame(immid, idleft, 2);
frame = imread('_frame.tif');
subplot(2, 2, 4); imshow(frame); title('Третий шаг');
clear frame im2;

% Приведение координат найденных центров.
O2      = round(O2/1.6); O3 = round(O3/1.6);
%O2(1)   = O1(1) + O2(1) + round(N/2) + 3;
O2(1)   = O1(1) + O2(1) + round(M/2) - 3; % (x ~ m)|(y ~ n)
O2(2)   = O1(2) + O2(2) + round(N/2) - 3;

%O3(1)   = O1(1) + O3(1) + round(N/2) + 3;
O3(1)   = O1(1) + O3(1) + round(M/2) - 3;
O3(2)   = O1(2) + O3(2) + round(N/2) - 3;
% Создается массив координат для отрисовки центров.
Temp(1, 1 : 3) = [O2(2) O2(1) k2];
Temp(2, 1 : 3) = [O3(2) O3(1) k3];
%Temp

% Отрисовка найденных центров глаз на основном изображении лица.
Pic = ddk_cent(ImFace, Temp, 'Cent_eye.tif');
figure; imshow(Pic);