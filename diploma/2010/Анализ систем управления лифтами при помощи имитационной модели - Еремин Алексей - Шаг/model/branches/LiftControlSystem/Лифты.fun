$Constant
	Высота_этажа            : integer = 25
	Интервал_появления_утро : real    = 104 // время в секундах
	Интервал_появления_день : real    = 167 // время в секундах
	Интервал_появления_вечер: real    = 104 // время в секундах
	Интервал_появления_ночь : real    = 437 // время в секундах
	Время_перемещения       : real    = 4 
	Время_остановки         : real    = 4 
	Время_высадки           : real    = 4 
	Время_посадки           : real    = 4
	Длительность_времени_дня: real    = 21600 // 6 часов
	Заданный_этаж_утро      : integer = 9
	Заданный_этаж_день      : integer = 9
	Заданный_этаж_вечер     : integer = 1
	Заданный_этаж_ночь      : integer = 9
$End

$Sequence Экспоненциальный_интервал_1: real
$Type = exponential 123456789
$End

$Function Определение_требуемого_этажа2: such_as Этаж.Номер
$Type = algorithmic
$Parameters
	Текущий_этаж     : such_as Этаж.Номер
	Конечный_этаж    : such_as Этаж.Номер
	ПасТекущий_этаж  : such_as Этаж.Номер
	ПасТребуемый_этаж: such_as Этаж.Номер
$Body
	if (Конечный_этаж > Текущий_этаж) return min(ПасТекущий_этаж, ПасТребуемый_этаж);
	if (Конечный_этаж < Текущий_этаж) return max(ПасТекущий_этаж, ПасТребуемый_этаж);
$End

$Sequence Экспоненциальный_интервал_2: real
$Type = exponential 234567891
$End

$Sequence Розыгрыш_этажа_утро: such_as Этаж.Номер
$Type = by_hist 123456789
$Body
	1  2  1
	2  3  4
	3  4  4
	4  5  4
	5  6  4
	6  7  4
	7  8  4
	8  9  4
	9  10 4
	10 11 4
	11 12 4
	12 13 4
	13 14 4
	14 15 4
	15 16 4
	16 17 4
	17 17 4
$End

$Sequence Розыгрыш_этажа_день: such_as Этаж.Номер
$Type = by_hist 123456789
$Body
	1  2  1
	2  3  1
	3  4  1
	4  5  1
	5  6  1
	6  7  1
	7  8  1
	8  9  1
	9  10 1
	10 11 1
	11 12 1
	12 13 1
	13 14 1
	14 15 1
	15 16 1
	16 17 1
	17 17 1
$End

$Sequence Розыгрыш_этажа_вечер: such_as Этаж.Номер
$Type = by_hist 123456789
$Body
	1  2  64
	2  3  1
	3  4  1
	4  5  1
	5  6  1
	6  7  1
	7  8  1
	8  9  1
	9  10 1
	10 11 1
	11 12 1
	12 13 1
	13 14 1
	14 15 1
	15 16 1
	16 17 1
	17 17 1
$End

$Sequence Розыгрыш_этажа_ночь: such_as Этаж.Номер
$Type = by_hist 123456789
$Body
	1  2  1
	2  3  1
	3  4  1
	4  5  1
	5  6  1
	6  7  1
	7  8  1
	8  9  1
	9  10 1
	10 11 1
	11 12 1
	12 13 1
	13 14 1
	14 15 1
	15 16 1
	16 17 1
	17 17 1
$End

$Function Другой_этаж: such_as Этаж.Номер
$Type = algorithmic
$Parameters
	Этаж_1: such_as Этаж.Номер
	Этаж_2: such_as Этаж.Номер
$Body
	if (Этаж_1 - Этаж_2 == 0) return Другой_этаж(Этаж_1, Розыгрыш_этажа_вечер);
	return Этаж_2;
$End

$Function Определение_требуемого_этажа: such_as Этаж.Номер
$Type = algorithmic
$Parameters
	Текущий_этаж_  : such_as Этаж.Номер
$Body
	return Другой_этаж(Текущий_этаж_, Розыгрыш_этажа_вечер);
$End

$Sequence Выбор_лифта: real
$Type = uniform 14597836
$End

$Function Определение_типа_лифта: integer
$Type = algorithmic
$Parameters
	Вместимость: such_as Лифты.Вместимость
$Body
	if (Вместимость == 5) return 1;
	if (Вместимость == 8) return 2;
$End

$Function Альтернативное_назначение: such_as Этаж.Номер
$Type = algorithmic
$Parameters
	Тек_этаж            : such_as Этаж.Номер
	Предыдущий_треб_этаж: such_as Этаж.Номер
	Пас_треб_этаж       : such_as Этаж.Номер
$Body
	if (abs(Тек_этаж - Предыдущий_треб_этаж) > abs(Тек_этаж - Пас_треб_этаж)) return Пас_треб_этаж;
	if (abs(Тек_этаж - Предыдущий_треб_этаж) < abs(Тек_этаж - Пас_треб_этаж)) return Предыдущий_треб_этаж;
$End

$Function СостояниеПослеВысадки: such_as Лифты.Состояние
$Type = algorithmic
$Parameters
	Направление : such_as Лифты.НаправлениеЛ
	кнопка_вниз : such_as Этаж.кнопка_вниз
	кнопка_вверх: such_as Этаж.кнопка_вверх
$Body
	if (Направление ==  1 and кнопка_вверх == 1) return ПосадкаВозможна;
	if (Направление == -1 and кнопка_вниз  == 1) return ПосадкаВозможна;
	if (1 == 1) /*else*/                         return Стоит;
$End

$Function НаправленПослеВысадки: such_as Лифты.НаправлениеЛ
$Type = algorithmic
$Parameters
	Направление: such_as Лифты.НаправлениеЛ
	Состояние  : such_as Лифты.Состояние
$Body
	if (Состояние == ПосадкаВозможна) return Направление;
	if (Состояние == Стоит)           return 0;
$End

$Function Смена_дня: such_as Системы.Часть_дня
$Type = algorithmic
$Parameters
	Текущее_время: real
$Body
	if (Текущее_время / Длительность_времени_дня < 1)
		return Утро;
	if (Текущее_время / Длительность_времени_дня >= 1 and Текущее_время / Длительность_времени_дня < 2)
		return День;
	if (Текущее_время / Длительность_времени_дня >= 2 and Текущее_время / Длительность_времени_дня < 3)
		return Вечер;
	if (Текущее_время / Длительность_времени_дня >= 3 and Текущее_время / Длительность_времени_дня < 4)
		return Ночь;
	if (Текущее_время / Длительность_времени_дня >= 4)
		return Смена_дня(Текущее_время - 4 * Длительность_времени_дня);
$End

$Function Функция_обслуживание: such_as Пассажиры.Обслуживается
$Type = algorithmic
$Parameters
	Есть_ли_человек: integer // 0 - нет, 1 и больше - да
$Body
	if (Есть_ли_человек == 0) return 0;
	if (Есть_ли_человек >= 1) return 1;
$End

$Function Пассажиропоток: real
$Type = algorithmic
$Parameters
	Время_суток: such_as Системы.Часть_дня
$Body
	if (Время_суток == Утро)  return Интервал_появления_утро;
	if (Время_суток == День)  return Интервал_появления_день;
	if (Время_суток == Вечер) return Интервал_появления_вечер;
	if (Время_суток == Ночь)  return Интервал_появления_ночь;
$End

$Function Выбор_Розыгрыша: integer
$Type = algorithmic
$Parameters
	Время_суток: such_as Системы.Часть_дня
$Body
	if (Время_суток == Утро)  return Розыгрыш_этажа_утро;
	if (Время_суток == День)  return Розыгрыш_этажа_день;
	if (Время_суток == Вечер) return Розыгрыш_этажа_вечер;
	if (Время_суток == Ночь)  return Розыгрыш_этажа_ночь;
$End

$Function Заданный_этаж: integer
$Type = algorithmic
$Parameters
	Время_суток: such_as Системы.Часть_дня
$Body
	if (Время_суток == Утро)  return Заданный_этаж_утро;
	if (Время_суток == День)  return Заданный_этаж_день;
	if (Время_суток == Вечер) return Заданный_этаж_вечер;
	if (Время_суток == Ночь)  return Заданный_этаж_ночь;
$End

$Function Направление_покоя: integer
$Type = algorithmic
$Parameters
	Текущий_этаж: integer
	Часть_дня   : such_as Системы.Часть_дня
$Body
	if (Текущий_этаж > Заданный_этаж(Часть_дня))
		return -1;
	if (Текущий_этаж < Заданный_этаж(Часть_дня))
		return 1;
	if (Текущий_этаж == Заданный_этаж(Часть_дня))
		return 0;
$End