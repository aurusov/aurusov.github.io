$Pattern Образец_нажатие_кнопки1: rule trace
$Relevant_resources
	_лифт    : Лифты     NoChange
	_пассажир: Пассажиры Keep
	_этаж    : Этаж      Keep
		first
$Body
_лифт
_пассажир
	Choice from
		_пассажир.Место        == 0      and
		_пассажир.СостояниеПас == Пришел 
	Convert_rule
		СостояниеПас = Этаж;
_этаж
	Choice from
		_этаж.Номер        == _пассажир.Текущий_этаж
	Convert_rule
		Людей_находится++;
		if (select (Лифты:
			Лифты.Текущий_этаж <> _этаж.Номер).Empty())
		{кнопка_вверх = 1;
		кнопка_вниз  = 1;}
$End

$Pattern Образец_нажатие_кнопки2: rule trace
$Relevant_resources
	_пассажир: Пассажиры Keep
	_этаж    : Этаж      Keep
		first
$Body
_пассажир
	Choice from
		_пассажир.Место        == 0      and
		_пассажир.СостояниеПас == Пришел
	Convert_rule
		СостояниеПас = Этаж;
_этаж
	Choice from
		_этаж.Номер == _пассажир.Текущий_этаж
	Convert_rule
		Людей_находится++;
		if (_пассажир.Направление > 0)
		{
			кнопка_вверх = 1;
		}
		if (_пассажир.Направление < 0)
		{
			кнопка_вниз  = 1;
		}
$End

$Pattern Образец_команды_пустому_лифту_посадка: rule trace
$Relevant_resources
	_пассажир : Пассажиры NoChange
	_лифт     : Лифты     Keep
		with_min abs(_пассажир.Время_прихода)
$Body
/*
Количество людей в лифте можно не проверять, потому что логика модели должна
обеспечивать состояние лифта, равное "стоит" только при отсутствии в нем людей.
Интересный случай, если человек приходит на тот этаж, где лифт "стоит":
Конечный и Требуемый этажи лифта станут равны текущему и выполнится паттерн
Образец_перед_высадкой. Т.е. лифт абсолютно адекватно должен уйти в следующий цикл работы.
*/
_пассажир
	Choice from 
		_пассажир.Место == 0 and _пассажир.СостояниеПас == Этаж
_лифт
	Choice from
		_лифт.Состояние == Стоит and _лифт.НаправлениеЛ == 0 and _лифт.Текущий_этаж == _пассажир.Текущий_этаж
	Convert_rule
		Состояние      = ПосадкаВозможна;
		НаправлениеЛ   = _пассажир.Направление;
$End

$Pattern Образец_команды_пустому_лифту_поездка: rule trace
$Relevant_resources
	_этаж     : Этаж   NoChange
	_лифт     : Лифты  Keep
		with_min abs(_этаж.Номер - _лифт.Текущий_этаж)
$Body
/*
Количество людей в лифте можно не проверять, потому что логика модели должна
обеспечивать состояние лифта, равное "стоит" только при отсутствии в нем людей.
Интересный случай, если человек приходит на тот этаж, где лифт "стоит":
Конечный и Требуемый этажи лифта станут равны текущему и выполнится паттерн
Образец_перед_высадкой. Т.е. лифт абсолютно адекватно должен уйти в следующий цикл работы.
*/
_этаж
	Choice from
		_этаж.Людей_находится > 0
_лифт
	Choice from
		_лифт.Состояние == Стоит and _лифт.НаправлениеЛ == 0 and _лифт.Текущий_этаж <> _этаж.Номер
	Convert_rule
		Конечный_этаж  = _этаж.Номер;
		Требуемый_этаж = _этаж.Номер;
		Состояние      = Едет;
		НаправлениеЛ   = (_этаж.Номер - _лифт.Текущий_этаж)/IAbs(_этаж.Номер - _лифт.Текущий_этаж);
$End

$Pattern Образец_перед_высадкой: rule trace
$Relevant_resources
	_лифт    : Лифты     Keep
		first
$Body
_лифт
	Choice from
		_лифт.Состояние      == Едет and
		_лифт.Требуемый_этаж == _лифт.Текущий_этаж
	Convert_rule
		Состояние     = ВысадкаВозможна;
$End

$Pattern Образец_высадки_пассажира: operation trace 
$Relevant_resources
	_дом     : Дома      NoChange Keep  
	_лифт    : Лифты     Keep     Keep  
	_пассажир: Пассажиры Keep     Erase 
		first
$Time = Время_высадки
$Body
_дом
	Convert_end
		Людей_обслужилось++;
_лифт
	Choice from
		_лифт.Состояние == ВысадкаВозможна
	Convert_begin
		Состояние = ВысадкаИдет;
	Convert_end
		Состояние = ВысадкаВозможна;
		Людей_в_лифте--;
_пассажир
	Choice from
		_пассажир.СостояниеПас   == Лифт        and
		_пассажир.Место          == _лифт.Номер and
		_пассажир.Требуемый_этаж == _лифт.Текущий_этаж
	Convert_begin
		СостояниеПас = ВыходЛифт;
	Convert_end
		Время_ухода  = Time_now;
$End

$Pattern Образец_перед_посадкой: rule trace
$Relevant_resources
	_лифт    : Лифты  Keep
		first
$Body
_лифт
	Choice from
		_лифт.Текущий_этаж <> _лифт.Конечный_этаж and
		_лифт.Состояние    == ВысадкаВозможна     and
		select
		(Пассажиры:
			Пассажиры.Требуемый_этаж  ==  _лифт.Текущий_этаж and
			Пассажиры.Место           ==  _лифт.Номер
		).Empty() /*Все вышли*/
/*
Еще не доехали до конца, то ПосадкаВозможна БЕЗ изменения направления лифта!
*/
	Convert_rule
		Состояние = ПосадкаВозможна;
$End

$Pattern Образец_после_высадки_на_конечном: rule trace
$Relevant_resources
	_этаж:  Этаж   NoChange
	_лифт:  Лифты  Keep
		first
$Body
_этаж
_лифт
	Choice from
		_лифт.Текущий_этаж == _лифт.Конечный_этаж and
		_лифт.Текущий_этаж == _этаж.Номер         and
		_лифт.Состояние    == ВысадкаВозможна     and
		select
		(Пассажиры:
			Пассажиры.Требуемый_этаж == _лифт.Текущий_этаж and
			Пассажиры.Место          == _лифт.Номер
		).Empty() /*Все вышли*/
	Convert_rule
		Состояние   = СостояниеПослеВысадки(_лифт.НаправлениеЛ, _этаж.кнопка_вниз, _этаж.кнопка_вверх);
/*
Если лифт приехал на свой конечный этаж, и на нем нажата кнопка по направлению движения
лифта, то направление лифта не меняется, а он переходит в состояние "ПосадкаВозможна".
Если же на конечном этаже кнопка по направлению движения не нажата, то направление
обнуляется, состояние становится "стоит". Дальше лифтом без проблем займется паттерн
Образец_команды_пустому_лифту, даже если пассажиры есть на том же этаже, что и лифт.
*/
		НаправлениеЛ = НаправленПослеВысадки(_лифт.НаправлениеЛ, _лифт.Состояние);
$End

$Pattern Образец_посадки_пассажира2: operation trace
$Relevant_resources
	_лифт    : Лифты      Keep  Keep
	_пассажир: Пассажиры  Keep  Keep
	_этаж    : Этаж       Keep  NoChange
		first
$Time = Время_посадки
$Body
_лифт
	Choice from
		_лифт.Людей_в_лифте <  _лифт.Вместимость and
		_лифт.Состояние     == ПосадкаВозможна
	Convert_begin
		Состояние = ПосадкаИдет;
	Convert_end
		Людей_в_лифте++;
		Состояние = ПосадкаВозможна;
_пассажир
	Choice from
		_пассажир.Текущий_этаж == _лифт.Текущий_этаж and
		_пассажир.Направление  == _лифт.НаправлениеЛ and
		_пассажир.Место        == 0                  and
		_пассажир.СостояниеПас == Этаж
	Convert_begin
		СостояниеПас = ВходЛифт;
	Convert_end
		Место        = _лифт.Номер;
		СостояниеПас = Лифт;
_этаж
	Choice from
		_этаж.Номер           == _лифт.Текущий_этаж and
		_этаж.Людей_находится >  0
	Convert_begin
		Людей_находится--;
		if (select
			(Пассажиры:
				Пассажиры.Текущий_этаж == _этаж.Номер and
				Пассажиры.Место        == 0           and
				Пассажиры.Направление  >  0           and
				Пассажиры.СостояниеПас == Этаж
			).Empty())
		{
			кнопка_вверх = 0;
		}
		if (select
			(Пассажиры:
				Пассажиры.Текущий_этаж == _этаж.Номер and
				Пассажиры.Место        == 0           and
				Пассажиры.Направление  <  0           and
				Пассажиры.СостояниеПас == Этаж
			).Empty())
		{
			кнопка_вниз  = 0;
		}
$End

$Pattern Образец_посадки_пассажира1: operation trace
$Relevant_resources
	_лифт    : Лифты      Keep  Keep
	_пассажир: Пассажиры  Keep  Keep
	_этаж    : Этаж       Keep  Keep
		first
$Time = Время_посадки
$Body
_лифт
	Choice from
		_лифт.Людей_в_лифте <  _лифт.Вместимость and
		_лифт.Состояние     == ПосадкаВозможна
	Convert_begin
		Состояние      = ПосадкаИдет;
	Convert_end
		Людей_в_лифте  = _лифт.Людей_в_лифте + 1;
		Состояние      = ПосадкаВозможна;
_пассажир
	Choice from
		_пассажир.Текущий_этаж == _лифт.Текущий_этаж and
		_пассажир.Направление  == _лифт.НаправлениеЛ and
		_пассажир.Место        == 0                  and
		_пассажир.СостояниеПас == Этаж
	Convert_begin
		СостояниеПас = ВходЛифт;
	Convert_end
		Место        = _лифт.Номер;
		СостояниеПас = Лифт;
_этаж
	Choice from
		_этаж.Номер           == _лифт.Текущий_этаж and
		_этаж.Людей_находится >  0
	Convert_begin
		Людей_находится--;
	Convert_end
		if (select
			(Пассажиры:
				Пассажиры.Текущий_этаж == _этаж.Номер and
				Пассажиры.Место        == 0          
				).Empty())
		{
			кнопка_вверх = 0;
			кнопка_вниз  = 0;
		}
$End

$Pattern Образец_после_посадки: rule trace
$Relevant_resources
	_лифт    : Лифты     Keep
		first
$Body
_лифт
	Choice from
		_лифт.Состояние == ПосадкаВозможна and
		select
		(Пассажиры:
			Пассажиры.Текущий_этаж == _лифт.Текущий_этаж and
			Пассажиры.Направление  == _лифт.НаправлениеЛ and
			Пассажиры.Место        == 0                  and
			Пассажиры.СостояниеПас == Этаж
		).Empty() /*в лифт никто не хочет*/
	Convert_rule
		Состояние = ОпрКонЭтажа;
$End

$Pattern Образец_после_наполнения_лифта: rule trace
$Relevant_resources
	_лифт    : Лифты     Keep
		first
$Body
_лифт
	Choice from
		_лифт.Состояние     == ПосадкаВозможна and
		_лифт.Людей_в_лифте == _лифт.Вместимость
	Convert_rule
		Состояние = ОпрКонЭтажа;
$End

$Pattern Образец_перед_поездкой1: rule trace
$Relevant_resources
	_пассажир : Пассажиры NoChange
	_Лифт     : Лифты     Keep
		with_max abs(_пассажир.Требуемый_этаж - _Лифт.Текущий_этаж)
$Body
/*
Паттерн должен правильно работать благодаря тому, что когда лифт находится в состоянии ОпрКонЭтажа
все пассажиры, которые хотели выйти на данном этаже уже вышли, и остались только те,
которые хотят ехать дальше, причем в ту же сторону, что и лифт.
Из этого следует, что достаточно взять одного пассажира из лифта, которому дальше всех ехать (или одному из таких)
и назначить его "целевой этаж", как целевой этаж лифта.
Этого будет достаточно, чтобы лифт поехал, и уже во время движения смог скорректировать
свои локальную (Требуемый_этаж) и глобальную (Конечный_этаж) цели.
*/
_пассажир
_Лифт
	Choice from
		_Лифт.Состояние == ОпрКонЭтажа     and
		_Лифт.Номер     == _пассажир.Место
	Convert_rule
		Конечный_этаж  = _пассажир.Требуемый_этаж;
		Требуемый_этаж = _пассажир.Требуемый_этаж;
		Состояние      = Едет;
$End

$Pattern Образец_перед_поездкой2: rule trace
$Relevant_resources
	_Лифт     : Лифты     Keep
		first
$Body
_Лифт
	Choice from
		_Лифт.Состояние     ==  ОпрКонЭтажа        and
		_Лифт.Людей_в_лифте ==  0                  and
		_Лифт.Конечный_этаж <> _Лифт.Текущий_этаж
	Convert_rule
		Требуемый_этаж = _Лифт.Конечный_этаж;
		Состояние      = Едет;
$End

$Pattern Образец_перед_остановкой: rule trace
$Relevant_resources
	_Лифт     : Лифты     Keep
		first
$Body
_Лифт
	Choice from
		_Лифт.Состояние     == ОпрКонЭтажа and
		_Лифт.Людей_в_лифте == 0           and
		_Лифт.Конечный_этаж == _Лифт.Текущий_этаж
	Convert_rule
		Состояние      = Стоит;
		НаправлениеЛ   = 0;
$End

$Pattern Образец_перемещения: operation trace
$Relevant_resources
	_Лифт: Лифты Keep Keep
		first
$Time = Время_перемещения
$Body
_Лифт
	Choice from
		_Лифт.Состояние      ==  Едет               and
		_Лифт.На_этаже       ==  true               and
		_Лифт.Требуемый_этаж <> _Лифт.Текущий_этаж
	Convert_begin
		На_этаже     = false;
	Convert_end
		На_этаже     = true;
		Текущий_этаж += _Лифт.НаправлениеЛ;
$End

$Pattern Образец_смена_требуемого_этажа1: rule trace
$Relevant_resources
	_этаж        : Этаж      NoChange
	_лифт        : Лифты     Keep
		first
$Body
_этаж
_лифт
	Choice from
		//движение вверх
		_лифт.Состояние      ==  Едет        and
		_лифт.Текущий_этаж   <= _этаж.Номер  and
		_лифт.Требуемый_этаж >  _этаж.Номер  and
		_лифт.НаправлениеЛ   == 1            and
		_этаж.кнопка_вверх   == 1            or
		//движение вниз
		_лифт.Состояние      ==  Едет        and
		_лифт.Текущий_этаж   >= _этаж.Номер  and
		_лифт.Требуемый_этаж <  _этаж.Номер  and
		_лифт.НаправлениеЛ   == -1           and
		_этаж.кнопка_вниз    ==  1
	Convert_rule
		Требуемый_этаж       = _этаж.Номер;
$End

$Pattern Образец_смена_требуемого_этажа2: rule trace
$Relevant_resources
	_пассажир    : Пассажиры NoChange
	_лифт        : Лифты     Keep
		with_min(abs(_лифт.Текущий_этаж - _пассажир.Требуемый_этаж))
$Body
_пассажир
_лифт
	Choice from
/*
_лифт.Текущий_этаж и _пассажир.Требуемый_этаж можно не сравнивать,
потому что пассажир не способен пропустить свой этаж
*/
		_лифт.Номер      == _пассажир.Место  and
		_лифт.Состояние  == Едет             and
		_лифт.НаправлениеЛ*(_лифт.Требуемый_этаж - _пассажир.Требуемый_этаж) > 0
	Convert_rule
		Требуемый_этаж  = _пассажир.Требуемый_этаж;
$End

$Pattern Образец_смена_конечного_этажа1: rule trace
$Relevant_resources 
	_этаж: Этаж  NoChange
	_лифт: Лифты Keep
		with_max abs(_лифт.Текущий_этаж - _этаж.Номер)
$Body
_этаж
	Choice from
		_этаж.Людей_находится > 0
_лифт
	Choice from
		_лифт.НаправлениеЛ*(_этаж.Номер - _лифт.Конечный_этаж) >  0  and
		_лифт.Состояние                                       == Едет
	Convert_rule
		Конечный_этаж  = _этаж.Номер;
		Требуемый_этаж = _этаж.Номер;
$End

$Pattern Образец_смена_конечного_этажа2: rule trace
$Relevant_resources
	_пассажир    : Пассажиры NoChange
	_лифт        : Лифты     Keep
		with_max abs(_лифт.Текущий_этаж - _пассажир.Требуемый_этаж)
$Body
_пассажир
_лифт
	Choice from
		_лифт.Номер              == _пассажир.Место     and
		_лифт.Состояние          ==  Едет               and
		_лифт.НаправлениеЛ*(_пассажир.Требуемый_этаж - _лифт.Конечный_этаж) > 0
	Convert_rule
		Конечный_этаж       = _пассажир.Требуемый_этаж;
		Требуемый_этаж      = _пассажир.Требуемый_этаж;
$End

